pipeline {
    agent { label 'cloud-governance' }
    environment {
        AWS_ACCESS_KEY_ID = credentials('cloud-governance-aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('cloud-governance-aws-secret-access-key')
        BUCKET = credentials('cloud-governance-bucket')
        ES_HOST = credentials('cloud-governance-es-host')
    }
    stages {
        stage('Run all policies pre active region') {
            steps {
                 sh """
                 declare -a regions=('us-east-1' 'us-east-2' 'us-west-1' 'us-west-2')
                    declare -a policies=('ec2_idle' 'ebs_unattached' 'ec2_untag')

                    for region in "${regions[@]}"
                    do
                       for policy in "${policies[@]}"
                       do
                           sudo podman run --rm --name cloud-governance -e policy=$policy -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=$region -e dry_run=yes -e policy_output=s3://$BUCKET/logs/$region -e log_level=INFO quay.io/ebattat/cloud-governance
                       done
                    done
                 """
            }
        }
    }
    post {
        failure {
              script {
                msg = "Build error for ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.BUILD_URL})"
            }
          }
    }
}