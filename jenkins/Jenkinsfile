pipeline {
    agent { label 'cloud-governance' }
    environment {
        AWS_ACCESS_KEY_ID = credentials('cloud-governance-aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('cloud-governance-aws-secret-access-key')
        BUCKET = credentials('cloud-governance-bucket')
        ES_HOST = credentials('cloud-governance-es-host')
        GITHUB_TOKEN = credentials('cloud-governance-git-access-token')
        contact = "ebattat@redhat.com"
    }
    stages {
        stage('Checkout') { // Checkout (git clone ...) the projects repository
          steps {
            checkout scm
           }
        }
        stage('Run Policies') {
            steps {
                 sh 'python3 cloud_governance/main/run_policies.py'
            }
        }
        stage('Upload ElasticSearch') {
            steps {
                 sh 'python3 cloud_governance/main/upload_es.py'
            }
        }
        stage('Cleanup workspace') {
            steps {
              sh 'sudo podman rmi quay.io/ebattat/cloud-governance'
              deleteDir()
              }
        }
    }
    post {
       always {
           deleteDir()
//            script {
//                 msg = "${env.JOB_NAME} ${env.BUILD_NUMBER} completed successfully"
//                 emailext body: """\
// 				Jenkins job: ${env.BUILD_URL}\nSee the console output for more details:  ${env.BUILD_URL}consoleFull\n\n
// 			    """,
//                 subject: msg,
//                 to: env.contact
//             }
       }
        failure {
              script {
                msg = "Build error for ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.BUILD_URL})"
                emailext body: """\
				Jenkins job: ${env.BUILD_URL}\nSee the console output for more details:  ${env.BUILD_URL}consoleFull\n\n
				""",
                subject: msg,
                to: env.contact
            }
          }
    }
}