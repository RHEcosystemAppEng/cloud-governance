pipeline {
    agent { label 'cloud-governance' }
    environment {
        AWS_ACCESS_KEY_ID = credentials('cloud-governance-aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('cloud-governance-aws-secret-access-key')
        BUCKET = credentials('cloud-governance-bucket')
        ES_HOST = credentials('cloud-governance-es-host')
        contact = "ebattat@redhat.com"
    }
    stages {
        stage('Checkout') { // Checkout (git clone ...) the projects repository
          steps {
            checkout scm
           }
        }
        stage('Run Policies') {
            steps {
                 sh 'chmod 775 cloud_governance/main/./run_policies.sh'
                 sh 'cloud_governance/main/./run_policies.sh $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY $BUCKET'
            }
        }
        stage('Upload ElasticSearch') {
            steps {
                 sh 'chmod 775 cloud_governance/main/./upload_es.sh'
                 sh 'cloud_governance/main/./upload_es.sh $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY $BUCKET $ES_HOST'
            }
        }
        stage('Cleanup workspace') {
            steps {
              deleteDir()
              }
        }
    }
    post {
       always {
           deleteDir()
           script {
                emailext body: """\
				Jenkins job: ${env.BUILD_URL}\n\n
				See the console output for more details:  ${env.BUILD_URL}consoleFull\n\n
			    """,
                subject: '${env.JOB_NAME} ${env.BUILD_NUMBER} completed successfully',
                to: 'test@example.com'
                    )
            }
       }
        failure {
              script {
                msg = "Build error for ${env.JOB_NAME} ${env.BUILD_NUMBER} (${env.BUILD_URL})"
            }
          }
    }
}